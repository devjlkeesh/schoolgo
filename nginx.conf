pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}


http {
  server_tokens off;
  server {
     listen 80 default_server;
     server_name _;
     return 301 https://$host$request_uri;
  }
  server {
    # buni change qiliw kerakmi ?
    listen 443 ssl;
    server_name _;
    root /usr/www/nginx/html;
      more_set_headers 'Server: some-string-here';


    ssl_certificate /etc/nginx/ssl/public.pem;
    ssl_certificate_key /etc/nginx/ssl/private.key;

    rewrite ^(/.*)\.html(\?.*)?$ $1$2 redirect;
    rewrite ^/(.*)/$ /$1 redirect;

    location / {
      try_files $uri/index.html $uri.html $uri/ $uri =404;
    }


    location = /admin {
      auth_basic "Login Required";
      auth_basic_user_file /etc/nginx/.htpasswd;
      try_files $uri/index.html $uri.html $uri/ $uri =404;
    }


    error_page 404 /404.html;
    error_page 500 501 502 /50x.html;
  }
}


server {
    listen 443 ssl;
    server_name dev.jlkeesh.uz;
    
    ssl_certificate /etc/nginx/ssl/public.pem;
    ssl_certificate_key /etc/nginx/ssl/private.key;

    # SSL configuration
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;

    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }

    location / {
        proxy_pass http://localhost:;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Additional configuration can go here
}
